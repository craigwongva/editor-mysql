What class is this?
fmt.Printf("%T", db) //*sql.DB

        editor.on( 'preSubmit', function( e, payload, action ) {
                //Send the clickedRow to the server but now we know that's not really needed
                payload.craig = clickedRow
        } );
        
        The following wasn't really needed, because it was superseded by key-blur.
        //      editor.on( 'postSubmit', function( e, payload, action ) {
//              //Here somehow put the focus on the next row.
//              console.log("postsubmit " + clickedRow)
//              //$('#example tbody tr:first-child td:last-child').click();
//              clickedRowPlusOne = clickedRow + 1;
//              if (clickedRowPlusOne == 11) {
//                      console.log("looping upward");
//                      clickedRowPlusOne = 1;
//              }
//              $('#example tbody tr:nth-child(' + clickedRowPlusOne + ') td:last-child').click();
//      } );

Here's the key-blue I mentioned earlier:
table.on( 'key-blur', function( e, datatable, cell, originalEvent ) {
        console.log("key-focus");
        var row = datatable.row( cell.index().row )
        var i = 0;
        datatable.rows().every( function ( rowIdx, tableLoop, rowLoop ) {
                i++;
                var row2 = datatable.row( rowIdx );
                var d = this.data();
                if ( d.rn == row.data().rn ) {
                        console.log( "key-blur found a match at " + i);
                        clickedRow = i
                }
        })

                clickedRowPlusOne = clickedRow + 1;
                if (clickedRowPlusOne == 11) {
                        console.log("looping upward via key-blur");
                        clickedRowPlusOne = 1;
                }
                $('#example tbody tr:nth-child(' + clickedRowPlusOne + ') td:last-child').click();

});

Here is a .on click that does work:
/* works:
$('#example tbody').on( 'click', 'td', function () {
        var tr = $(this).closest('tr');
        var row = table.row( tr );
        var i = 0;
        table.rows().every( function ( rowIdx, tableLoop, rowLoop ) {
                i++;
                var row2 = table.row( rowIdx );
                var d = this.data();
                if ( d.rn == row.data().rn ) {
                        console.log( "click found a match at " + i);
                        clickedRow = i
                }
        })
})
*/

gofmt -w yourcode.go

drop trigger mytrigger;
CREATE TRIGGER mytrigger BEFORE UPDATE on serversideyacback FOR EACH ROW SET new.triggers = old.triggers+1, new.correct = old.correct + CASE WHEN new.me = old.es THEN 1 ELSE 0 END;
update serversideyacback set me = 'me resulta propuesto7' where es = 'me resulta complicado';

